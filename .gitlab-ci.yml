# stages:
#   - build
# build:
#   image: griefed/docker-with-buildx:latest
#   stage: build
  
#   services:
#     - docker:dind # Docker in Docker to access Docker deamons for commands.
#   before_script:
#     - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY # bruger inbyggget variabler for at lave en user
#     - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
#     - docker buildx create --use
#   script:
#     - docker pull "$CI_REGISTRY_IMAGE:latest" || true #hent et image hvis der er et
#     - docker buildx build --push --tag "$CI_REGISTRY_IMAGE:latest" --platform linux/arm64/v8,linux/amd64 --tag "$CI_REGISTRY_IMAGE:${CI_COMMIT_TAG-latest}" --tag "$CI_REGISTRY_IMAGE:latest" . # her laver vi et multi arch build
#   # her sikre vi at det kun sker pÃ¥ pushes til main
#   only:
#     - main
#     - tags

variables:
  GIT_DEPTH: 1                               # Create a shallow copy
  BOT_NAME: "GitLab Runner Bot"              # Bot's name that appears in the commit log
  BOT_EMAIL: "au685727@uni.au.dk" # Bot's email, not important

build:
  # Use the official docker image.
  image: griefed/docker-with-buildx:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx create  --use
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker buildx build --push --cache-from $CI_REGISTRY_IMAGE:latest --platform linux/amd64 --tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" --tag "$CI_REGISTRY_IMAGE:latest" .
  only:
    - tags